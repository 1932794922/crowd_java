<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--    1.配置扫描包  主要是将 service 的包加载到ioc容器中-->
    <context:component-scan base-package="xiaozaiyi.crowd.service" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <!-- 2.事物控制配置 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--3.配置事物切面-->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* xiaozaiyi.crowd.service..*.*(..))"/>
        <!-- 3.1配置事物增强-->
        <!--将切入点表达式和事务通知关联起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <!-- 4.配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <!--查询事物方法: 只读属性 (可以优化代码)-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <!--增删改方法:配置事务传播行为、回滚异常-->
            <!--propagation属性:
                    REQUIRED:默认值，表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开新事务。
                            如果已经有则使用自己的.
                            顾虑:用别人的事务有可能被 ”回滚。
                    REQUIRES_NEW : 建议使用。表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，
                            则自己开新事务。就算是已经有了，也在自己开启的事务中运行。(不受别的影响)
                             好处:不受其他事务回滚的影响
               rollback-for属性:
                    默认值 : RuntimeException
                    建议 : 异常就回滚
            -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>


</beans>